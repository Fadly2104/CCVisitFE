import { Component, useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { Card, Form, InputGroup, Button, ButtonGroup, ToggleButton, Table, Row, Col } from 'react-bootstrap';
import Header from './Header';
import axios from 'axios';
import "flatpickr/dist/themes/material_green.css";
import "flatpickr/dist/flatpickr.css";
import Flatpickr from "react-flatpickr";
import moment from 'moment/moment';


const RowsPerPage = 3;

export default function Jadwal() {
  const [data, setData] = useState([]);
  const [currentPage, setCurrentPage] = useState(1);
  const [totalPages, setTotalPages] = useState(1);

  useEffect(() => {
    const fetchData = () =>{
     axios.get('https://757b-114-129-21-140.ngrok-free.app/api/Peminjaman',{
        headers:{
            'ngrok-skip-browser-warning': true
        }
     }).then(postData => {
  
     // reshaping the array
     const customHeadings = postData.data.map(item=>({
        "idPeminjaman": item.idPeminjaman,
        "idRuangan": item.idRuangan,
        "ticket": item.ticket,
        "namaRuangan": item.ruangan.namaRuangan,
        "namaPIC": item.namaPIC,
        "email": item.email,
        "noHp": item.noHp,
        "jumlahTamu": item.jumlahTamu,
        "startTime": item.startTime,
        "endTime": item.endTime,
        "keperluan": item.keperluan,
        "status": item.status,
     }))
     setData(customHeadings)
      // console.log(customHeadings);
      // Menghitung total halaman berdasarkan jumlah total item dan item per halaman
     setTotalPages(Math.ceil(customHeadings.length / RowsPerPage));
     })
    }
    fetchData()
  }, [currentPage]) 

// axios.get('https://e2b7-114-129-21-140.ngrok-free.app/api/Peminjaman',{
//     headers:{
//         'ngrok-skip-browser-warning': true
//     },
// }).then(res => console.log(res.data));


  
  const today = moment();
  const endOfWeek = today.endOf('week').format('yyyy-MM-DDT00:00');

//   const waw = data.map((yo) => yo.startTime);

//   const foDate = moment(data.startTime).format('DD-MM-yyyy, h:mm');

// //   console.log(waw);

  return (
    <>
    <div className='jadwal'>
    <Header/>
        <div className='container'>
        <Card id='cardjad' className='mt-3 pb-3'>
          <Card.Body>
            <h2 className='text-center' id='foreg'>Informasi Peminjaman</h2>
                
            <Row>
              {data
                .slice((currentPage - 1) * RowsPerPage, currentPage * RowsPerPage)
                .map((item) => (
                  <Col xl={4} xs={12} sm={6} key={item.idPeminjaman}>
                    <Card className='mx-0 mt-5'>
                      <Card.Header>Peminjaman No. {item.ticket}</Card.Header>
                      <Card.Body>
                        <Table>
                          <thead>
                            <tr>
                              <td className='jatem'>
                                Nama PIC
                              </td>
                              <td className='jatem'>
                                : {item.namaPIC}
                              </td>
                            </tr>
                            <tr>
                              <td className='jatem'>
                                Ruangan
                              </td>
                              <td className='jatem'>
                                : {item.namaRuangan}
                              </td>
                            </tr>
                            <tr>
                              <td className='jatem'>
                                Status
                              </td>
                              <td className='jatem'>
                                : {item.status}
                              </td>
                            </tr>
                            <tr>
                              <td className='jatem'>
                                Waktu
                              </td>
                              <td className='jatem'>
                                : {moment(item.startTime).format("h:mm")} ~ {moment(item.endTime).format("h:mm")}
                              </td>
                            </tr>
                          </thead>
                        </Table>
                      </Card.Body>
                    </Card>
                  </Col>
                ))}
            </Row>
            {/* Menambahkan navigasi pagination */}
            <div className='pagination'>
              <button onClick={() => setCurrentPage(currentPage - 1)} disabled={currentPage === 1}>
                Previous
              </button>
              <span>{`Page ${currentPage} of ${totalPages}`}</span>
              <button onClick={() => setCurrentPage(currentPage + 1)} disabled={currentPage === totalPages}>
                Next
              </button>
            </div>
            </Card.Body>
        </Card>
        </div>

        <div>&nbsp;</div>
    </div>
    </>
  );
}





































import { Component, useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { Card, Form, InputGroup, Button, ButtonGroup, ToggleButton, Table, Row, Col } from 'react-bootstrap';
import Header from './Header';
import axios from 'axios';
import "flatpickr/dist/themes/material_green.css";
import "flatpickr/dist/flatpickr.css";
import Flatpickr from "react-flatpickr";
import moment from 'moment/moment';

export default function Jadwal() {
  const [data, setData] = useState([]);

  useEffect(() => {
    const fetchData = () =>{
     axios.get('https://757b-114-129-21-140.ngrok-free.app/api/Peminjaman',{
        headers:{
            'ngrok-skip-browser-warning': true
        }
     }).then(postData => {
  
     // reshaping the array
     const customHeadings = postData.data.map(item=>({
        "idPeminjaman": item.idPeminjaman,
        "idRuangan": item.idRuangan,
        "ticket": item.ticket,
        "namaRuangan": item.ruangan.namaRuangan,
        "namaPIC": item.namaPIC,
        "email": item.email,
        "noHp": item.noHp,
        "jumlahTamu": item.jumlahTamu,
        "startTime": item.startTime,
        "endTime": item.endTime,
        "keperluan": item.keperluan,
        "status": item.status,
     }))
     setData(customHeadings)
      // console.log(customHeadings);
     })
    }
    fetchData()
  }, []) 

// axios.get('https://e2b7-114-129-21-140.ngrok-free.app/api/Peminjaman',{
//     headers:{
//         'ngrok-skip-browser-warning': true
//     },
// }).then(res => console.log(res.data));


  
  const today = moment();
  const endOfWeek = today.endOf('week').format('yyyy-MM-DDT00:00');

//   const waw = data.map((yo) => yo.startTime);

//   const foDate = moment(data.startTime).format('DD-MM-yyyy, h:mm');

// //   console.log(waw);

  return (
    <>
    <div className='jadwal'>
    <Header/>
        <div className='container'>
        <Card id='cardjad' className='mt-3 pb-3'>
          <Card.Body>
            <h2 className='text-center' id='foreg'>Informasi Peminjaman</h2>
                
            <Row>
            {data.map((item)=>{
              return (
                <Col xl={4} xs={12} sm={6} md={6} key={item.idPeminjaman}>
                    <Card className='mx-0 mt-5'>
                        <Card.Header>Peminjaman No. {item.ticket}</Card.Header>
                        <Card.Body>
                            <Table>
                                <thead>
                                    <tr>
                                        <td className='jatem'>
                                            Nama PIC
                                        </td>
                                        <td className='jatem'>
                                            : {item.namaPIC}
                                        </td>
                                    </tr>
                                    <tr>
                                        <td className='jatem'>
                                            Ruangan
                                        </td>
                                        <td className='jatem'>
                                            : {item.namaRuangan}
                                        </td>
                                    </tr>
                                    <tr>
                                        <td className='jatem'>
                                            Status
                                        </td>
                                        <td className='jatem'>
                                            : {item.status}
                                        </td>
                                    </tr>
                                    <tr>
                                        <td className='jatem'>
                                            Waktu
                                        </td>
                                        <td className='jatem'>
                                            : {moment(item.startTime).format("h:mm")} ~ {moment(item.endTime).format("h:mm")}
                                        </td>
                                    </tr>
                                </thead>
                            </Table>
                        </Card.Body>
                    </Card>
                </Col>
                )
            })}
            </Row>

            </Card.Body>
        </Card>
        </div>

        <div>&nbsp;</div>
    </div>
    </>
  );
}
